services:
  jenkins:
    build:
      context: ./
      dockerfile: ./jenkins/Dockerfile
    image: local/jenkins:latest
    container_name: jenkins-local
    privileged: true
    user: root
    ports:
      - 9043:8443 # ssl
      - 50000:50000
    environment:
      JENKINS_OPTS: "-Xmx2048m --httpPort=8080 --httpsPort=8443 --httpsKeyStore=/var/ssl/keystore.jks --httpsKeyStorePassword=123456"
      JENKINS_HTTPS_KEYSTORE: "/var/ssl/keystore.jks"
      JENKINS_HTTPS_KEYSTORE_PASSWORD: "123456" # senha-em-texto-não criptografado-para-armazenamento-de-chaves
    volumes:
      - jenkins_home:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
      - ./jenkins/ssl:/var/ssl
    restart: always
    networks:
      - sonar-jenkins-network
    depends_on:
      - sonarqube
  sonarqube:
    build:
      context: .
      dockerfile: ./sonar/Dockerfile
    image: local/sonarqube:latest
    container_name: sonar-local
    user: 1000:1000
    depends_on:
      - db
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://db:5432/sonar
      SONAR_JDBC_USERNAME: sonar
      SONAR_JDBC_PASSWORD: sonar
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_logs:/opt/sonarqube/logs
    ports:
      - "9000:9000"
    networks:
      - sonar-jenkins-network
      - sonar-db-network
  db:
    image: postgres:12.20-alpine3.20
    container_name: postegres-sonar-local
    environment:
      POSTGRES_USER: sonar
      POSTGRES_PASSWORD: sonar
    volumes:
      - postgresql:/var/lib/postgresql
      - postgresql_data:/var/lib/postgresql/data
    networks:
      - sonar-db-network
  nexus:
    image: sonatype/nexus3:3.73.0-java17-alpine
    container_name: nexus-local
    privileged: true
    user: root
    ports:
      - "9143:8094"
      - "8123:8123"
    volumes:
      - nexus-data:/nexus-data
      - ./nexus/ssl:/nexus-data/etc/ssl
      - ./nexus/etc/nexus.properties:/nexus-data/etc/nexus.properties
      - ./nexus/jetty/jetty-https.xml:/opt/sonatype/nexus/etc/jetty/jetty-https.xml
    environment:
      NEXUS_SECURITY_RANDOMPASSWORD: false  # Desabilitar senha aleatória na inicialização
      INSTALL4J_ADD_VM_PARAMS: "-Xms2703m -Xmx2703m -XX:MaxDirectMemorySize=2703m"
    restart: unless-stopped
    networks:
      - sonar-jenkins-network
    depends_on:
      - sonarqube
      - jenkins
  k3s: # Será um agente do rancher
    image: rancher/k3s:v1.31.2-k3s1
    container_name: k3s-local
    privileged: true
    user: root
    environment:
      - K3S_KUBECONFIG_OUTPUT=/output/kubeconfig.yaml
      - K3S_KUBECONFIG_MODE=644
      - K3S_NODE_NAME=k3s-node
      - K3S_URL=https://rancher:6443
      - K3S_TOKEN=K102111c04e53b6eede5894adc0f6be0a550b689f5aed15288701b618b65e7ef837::server:a8cd4c818d53830f9fb939b7f76955d4
    volumes:
      - k3s-data:/var/lib/rancher/k3s
      - k3s-config:/etc/rancher/k3s
      - ./k3s/output:/output
    ports:
      # - "6443:6443"  # Porta padrão de API do Kubernetes
      - "9280:80"    # Exemplo de porta para expor serviços
      - "9243:443"   # Exemplo de porta HTTPS para expor serviços
    command:
      - server
      - --cluster-init
      - --tls-san=rancher,local-node # Criado no rancher do outro container
    networks:
      - sonar-jenkins-network
      - k3s-rancher-network
    depends_on:
      - sonarqube
      - jenkins
      - nexus
  rancher:
    image: rancher/rancher:latest
    container_name: rancher-local
    restart: unless-stopped
    privileged: true
    user: root
    ports:
      - "9380:80"
      - "9343:443"
    networks:
      - k3s-rancher-network
    volumes:
      - rancher-data:/var/lib/rancher
      - ./rancher/ssl/cert.pem:/etc/rancher/ssl/cert.pem
      - ./rancher/ssl/key.pem:/etc/rancher/ssl/key.pem
      - ./rancher/ssl/cacerts.pem:/etc/rancher/ssl/cacerts.pem
    depends_on:
      - sonarqube
      - jenkins
      - nexus
      - k3s

volumes:
  jenkins_home:
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_logs:
  postgresql:
  postgresql_data:
  nexus-data:
  k3s-data:
  k3s-config:
  rancher-data:

networks:
  sonar-jenkins-network:
  sonar-db-network:
  k3s-rancher-network: